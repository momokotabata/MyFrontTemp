// @mixin Media Query
// ===========================================================
=pc
	@media screen and (min-width: 769px)
		@content

=sp
	@media screen and (max-width: 768px)
		@content



// @mixin font
// ===========================================================
// デフォルト英字フォントの設定します
// ------------------------------------
=ENfont
	font-family: "Roboto", sans-serif
	font-weight: 400
	+metrics()


// font-size,line-heightを指定を指定します
// ------------------------------------
=fz($fz: font, $lh: $fz * 2)
	font-size: ( $fz / 16 ) * 1rem
	line-height: $lh / $fz


// `長文時`の行間（line-height）と上下余白（margin）を自動調整します
// ------------------------------------
// @desc - font-sizeに加え、`長文時`の行間（line-height）と上下余白（margin）を自動で調整します
//         だんだんズレが生じて、デザインとのmarginが合わなくなるのを防ぎます
// @example
//   font-size: 16px
//   line-height: 1.75(28)
//   margin-bottom: 44px
//   margin-top: 24px
//
//   ↓↓↓↓↓
//
//   @scss - Usage
//   .foo {
//     @include fzm(16, 28, 50, 30)
//   }
//
//   @css - CSS Output
//   .foo {
//     font-size: 1rem;
//     line-height: 1.75;
//     margin-bottom: 44px;
//     margin-top: 24px;
//   }
=fzm($fz: font, $lh: $fz * 2, $mb: 0, $mt: 0)
	font-size: ( $fz / 16 ) * 1rem
	line-height: $lh / $fz
	margin-bottom: $mb - ($fz * ($lh / $fz) - $fz) / 2 + px
	margin-top: $mt - ($fz * ($lh / $fz) - $fz) / 2  +px


// メトリクスを指定します
// ------------------------------------
=metrics($bool:true)
	@if $bool == true
		font-feature-settings : "palt" 1
	@if $bool == false
		font-feature-settings: normal



// @mixin clearfix
// ===========================================================
// @desc - クリアーフィックスのスタイルを挿入します
// @param {Bool, String} - 引数$importantに"important"を渡すと`!important`の指定ができます
// @example scss - Usage
//
// .foo { @include _clearfix; }
// .bar { @include _clearfix(important); }
//
// @example css - CSS output
// .foo:after {
//   content: "";
//   display: block;
//   clear: both;
// }
//
// .bar:after {
//   content: "" !important;
//   display: block !important;
//   clear: both !important;
// }
=clearfix($important: false)
	@if ($important == "important")
		$important: unquote("!important")
	@else
		$important: null
	&:after
		content: "" $important
		display: block $important
		clear: both $important



// 背景画像をcoverにします
// ------------------------------------
=bgCover($url,$bs:cover)
	background-image: url($url)
	background-size: $bs
	background-repeat: no-repeat
	background-position: 50% 50%



// @mixin position
// ===========================================================
// 中央寄せ
// ---------------
=center
	margin: auto
	position: absolute
	top: 0
	right: 0
	bottom: 0
	left: 0


// 左寄せ
// ---------------
=left
	position: absolute
	top: 0
	right: 0
	bottom: 0
	left: 0



// @mixin flexbox
//======================================================
=flex
	display: flex
	flex-flow: row nowrap
	justify-content: space-between
	align-items: stretch



// @mixin transition
// ===========================================================
=easing($duration: .4, $ease: ease)
	transition: $duration + s $ease



// @mixin Hover
// ===========================================================
=alpha($op:.6)
	+easing
	+pc
		&:hover
			opacity: $op

=deco
	text-decoration: underline
	+pc
		&:hover
			text-decoration: none

=hoverTxt($color: #000, $alpha:.3)
	+easing
	+pc
		&:hover
			color: rgba($color, $alpha)



// @mixin event
// ===========================================================
// @desc - マウスオーバーなどのイベントをまとめて指定します
// @author - Harry Roberts
// @param {Bool} $self [false] - Whether or not to include current selector
// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
// @example scss - Usage
// .foo {
//   @include _onEvent{
//     background-color: blueviolet;
//   }
// }
// @example css - CSS output
// .foo:hover, .foo:active, .foo:focus {
//   background-color: blueviolet;
// }
=onEvent($self: false)
	+pc
		@if $self
			&,
			&:hover,
			&:active,
			&:focus
				@content

		@else
			&:hover,
			&:active,
			&:focus
				@content
